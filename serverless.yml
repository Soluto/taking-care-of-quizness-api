
service: takingCareofQuizness

provider:
  name: aws
  runtime: nodejs12
  environment:
#    User need to add a a username to
    AUTHORIZER_ARN: ""
    DYNAMODB_TABLE: questionsTable
  stackTags:
    APPLICATION: TAKING_CARE_OF_QUIZNESS
    stage: ${opt:stage, 'dev'}
    region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  apiKeys:
    - takingCareOfQuizness-apiKey

functions:
  create:
    handler: app/create.create
    events:
      - http:
          method: post
          path: questions
          integration: lambda
          private: true
          cors: true
          authorizer:
            arn: ${self:provider.environment.AUTHORIZER_ARN}
          request:
            passThrough: WHEN_NO_TEMPLATES
    tags:
      APPLICATION: TAKING_CARE_OF_QUIZNESS


  list:
    handler: app/list.list
    events:
      - http:
          method: get
          path: questions
          integration: lambda
          private: true
          cors: true
          authorizer:
            arn: ${self:provider.environment.AUTHORIZER_ARN}
          request:
            passThrough: WHEN_NO_TEMPLATES
    tags:
      APPLICATION: TAKING_CARE_OF_QUIZNESS

resources:
  Resources:
    QuestionsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: questionId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: category
            AttributeType: S
          - AttributeName: questionText
            AttributeType: S
          - AttributeName: answers
            AttributeType: S
        KeySchema:
          - AttributeName: questionId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: category
                KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    ApiGatewayMethodTodosPost:
      Type: "AWS::ApiGateway::Method"
      Properties:
        AuthorizationScopes:
          - quiz-resourceServer/questions.write
    ApiGatewayMethodTodosGet:
      Type: "AWS::ApiGateway::Method"
      Properties:
        AuthorizationScopes:
          - quiz-resourceServer/questions.read

